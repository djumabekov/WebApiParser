version: '3.4'

services:
  webapiparser.api:
    image: ${DOCKER_REGISTRY-}webapiparser
    container_name: WebApiParser
    build:
      context: .
      dockerfile: WebApiParser/Dockerfile
    environment:
      ConnectionStrings__DefaultConnection: "host=sql;port=5432;database=WebApiParser;username=postgres;password=password"
      Logging__LogLevel__Default: "Error"
    ports:
      - "5101:80"
    networks:
      - dockerapi-dev
  sql:
    image: postgres:latest
    container_name: sql
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - webapiparser_db_volume:/var/lib/postrgesql/data
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "WebApiParser"
    networks:
      - dockerapi-dev

  mongo:
     image: mongo:4.4
     container_name: mongo
     networks:
      - dockerapi-dev

  elasticsearch:
     image: docker.elastic.co/elasticsearch/elasticsearch-oss:7.10.2
     container_name: elasticsearch
     environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Dlog4j2.formatMsgNoLookups=true -Xms512m -Xmx512m"
     networks:
      - dockerapi-dev

  graylog:
     image: graylog/graylog:4.0 
     container_name: graylog
     environment:
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
        #login: admin, password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://localhost:9000/
     entrypoint: /usr/bin/tini -- wait-for-it elasticsearch:9200 --  /docker-entrypoint.sh
     ports:
      - 9000:9000
      - 12201:12201
      - 1514:1514
      - 1514:1514/udp
      - 12201:12201/udp
     depends_on:
      - mongo
      - elasticsearch
     networks:
      - dockerapi-dev
     restart: always

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:80"
    networks:
      - dockerapi-dev

volumes:
  webapiparser_db_volume:
  
networks:
  dockerapi-dev:
    driver: bridge